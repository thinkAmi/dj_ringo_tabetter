"""
Django settings for dj_ringo_tabetter project.

Generated by 'django-admin startproject' using Django 1.8.4.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'm+f+kga!2bms@1ggh*8u^x@clljcrfbv8m)(o=b1ftpu$+a%6)'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_jinja',
    'apps.tweets',
    'apps.api',
    'apps.highcharts',
)
# 開発環境がWindowsでgunicornが使えないことから、
# herokuのみgunicornを使えるように設定
if 'DYNO' in os.environ:
    INSTALLED_APPS += ('gunicorn',)


MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'dj_ringo_tabetter.urls'

TEMPLATES = [
    {
        "BACKEND": "django_jinja.backend.Jinja2",
        "APP_DIRS": True,
        "OPTIONS": {
            "match_extension": ".jinja2",
        }
    },
    # なくてもいいけど、adminページがどうなるのかな
    # {
    #     'BACKEND': 'django.template.backends.django.DjangoTemplates',
    #     'DIRS': [],
    #     'APP_DIRS': True,
    #     'OPTIONS': {
    #         'context_processors': [
    #             'django.template.context_processors.debug',
    #             'django.template.context_processors.request',
    #             'django.contrib.auth.context_processors.auth',
    #             'django.contrib.messages.context_processors.messages',
    #         ],
    #     },
    # },
]

# デフォルトのjinja2テンプレートの拡張子
DEFAULT_JINJA2_TEMPLATE_EXTENSION = '.jinja2'

WSGI_APPLICATION = 'dj_ringo_tabetter.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

# dj_database_urlによるDatabase設定
import dj_database_url
# Heroku環境には`DYNO`環境変数がある前提
if 'DYNO' in os.environ:
    # Heroku環境
    DATABASES = {
        # dj_database_url.config()
        'default': dj_database_url.config()
    }

else:
    # 開発環境の場合、engineも渡さないとエラーとなる
    DATABASES = {
        'default':
            dj_database_url.config(
                default='postgres://postgres:postgres@127.0.0.1:5432/ringo_tabetter_py',
                engine=dj_database_url.SCHEMES['postgresql']
            )
    }

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#     }
# }


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'ja'

TIME_ZONE = 'Asia/Tokyo'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'

# Djangoが静的ファイルとして認識するフォルダを指定
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)

TEMPLATE_DIRS = (
    os.path.join(BASE_DIR,  'templates'),
)
TEMPLATE_LOADERS = (
    'django_jinja.loaders.AppLoader',
    'django_jinja.loaders.FileSystemLoader',

)


# dotenvでTwitterAPIのkeyやsecretを環境変数にセットしておく
# ここで書いておけば、commandsなどでも有効になる
import dotenv
dotenv.read_dotenv(os.path.join(BASE_DIR, '.env'))


# # Herokuでstaticファイルを配信するためのwhitenoise向けの設定
# 内部でSTATIC_ROOTを見てるっぽいので、無いとエラーになる
STATIC_ROOT = 'staticfiles'

# gzip不要ならいらないかも
STATICFILES_STORAGE = 'whitenoise.django.GzipManifestStaticFilesStorage'
